// works but with broken types
// const PrintablePage = () => {
//   const [pages, setPages] = useState([[]]);
//   const contentRef = useRef(null);

//   // A4 dimensions in pixels (assuming 96 DPI)
//   const PAGE_WIDTH = 794; // 210mm
//   const PAGE_HEIGHT = 1123; // 297mm
//   const CONTENT_HEIGHT = PAGE_HEIGHT - 192; // Subtracting 2 inches (96 * 2) of padding

//   useEffect(() => {
//     const paginateContent = () => {
//       const content = contentRef.current;
//       if (!content) return;

//       // Reset the content container's style to measure properly
//       content.style.height = "auto";
//       content.style.overflow = "visible";

//       // Get all direct child elements
//       const elements = Array.from(content.children);
//       const newPages = [[]];
//       let currentPage = 0;
//       let currentHeight = 0;

//       elements.forEach((element) => {
//         const clone = element.cloneNode(true);
//         // Create a temporary container to measure the element
//         const tempContainer = document.createElement("div");
//         tempContainer.appendChild(clone);
//         tempContainer.style.visibility = "hidden";
//         tempContainer.style.position = "absolute";
//         tempContainer.style.width = `${PAGE_WIDTH - 192}px`; // Subtracting 2 inches padding
//         document.body.appendChild(tempContainer);

//         const elementHeight = tempContainer.offsetHeight;
//         document.body.removeChild(tempContainer);

//         // If adding this element would exceed page height, start a new page
//         if (currentHeight + elementHeight > CONTENT_HEIGHT) {
//           currentPage++;
//           currentHeight = 0;
//           newPages[currentPage] = [];
//         }

//         newPages[currentPage].push(element);
//         currentHeight += elementHeight;
//       });

//       setPages(newPages);
//     };

//     // Add resize observer to handle dynamic content changes
//     const resizeObserver = new ResizeObserver(() => {
//       paginateContent();
//     });

//     if (contentRef.current) {
//       resizeObserver.observe(contentRef.current);
//       paginateContent();
//     }

//     return () => {
//       if (contentRef.current) {
//         resizeObserver.disconnect();
//       }
//     };
//   }, []);

//   return (
//     <div className="min-h-screen bg-gray-100 p-8 flex justify-center">
//       <style>{`
//         @page {
//           size: A4;
//           margin: 0;
//         }

//         @media print {
//           body { margin: 0; padding: 0; }
//           .print-container { background: none !important; }
//           .page { page-break-after: always; }
//           .page:last-child { page-break-after: auto; }
//           .page-break { display: none !important; }
//           .measurement-container { display: none !important; }
//           .debug-info { display: none !important; }
//         }

//         @media screen {
//           .page { margin-bottom: 2rem; }
//           .page-break {
//             width: 210mm;
//             height: 40px;
//             margin: 2rem auto;
//             background: #f3f4f6;
//             display: flex;
//             align-items: center;
//             justify-content: center;
//             color: #6b7280;
//             font-size: 14px;
//             border-top: 2px dashed #d1d5db;
//             border-bottom: 2px dashed #d1d5db;
//           }
//         }
//       `}</style>

//       {/* Hidden measurement container */}
//       <div className="measurement-container fixed left-0 top-0 -z-50 opacity-0 pointer-events-none">
//         <div ref={contentRef}>
//           {/* Default paragraph */}
//           <p className="text-base leading-relaxed text-gray-600">
//             This is a standard paragraph with comfortable line height and a
//             subtle gray color for easy reading.
//           </p>

//           {/* Large, bold paragraph */}
//           <p className="text-xl font-bold text-gray-900">
//             Here's a larger, bolder paragraph that demands attention and
//             emphasizes important information.
//           </p>

//           {/* Italic, muted paragraph */}
//           <p className="text-sm italic text-gray-500">
//             A smaller, italicized paragraph perfect for side notes or additional
//             context.
//           </p>

//           {/* Centered paragraph with custom spacing */}
//           <p className="text-center text-lg text-blue-600 tracking-wide">
//             This centered paragraph uses blue text and wider letter spacing for
//             visual interest.
//           </p>

//           {/* Justified paragraph with serif font */}
//           <p className="text-justify font-serif text-gray-700">
//             A justified paragraph using a serif font family, creating a more
//             traditional and formal appearance.
//           </p>

//           {/* Condensed paragraph */}
//           <p className="text-sm tracking-tight leading-snug text-gray-800">
//             This paragraph uses tighter tracking and leading for a more
//             condensed appearance, suitable for space-conscious designs.
//           </p>

//           {/* Highlighted paragraph */}
//           <p className="bg-yellow-100 p-4 rounded-lg text-gray-700">
//             A paragraph with a highlighted background, drawing attention to
//             important content or announcements.
//           </p>

//           {/* Bordered paragraph */}
//           <p className="border-l-4 border-green-500 pl-4 text-gray-600">
//             This paragraph features a left border, commonly used for quotes or
//             highlighted content sections.
//           </p>

//           {/* Large paragraph with custom line height */}
//           <p className="text-2xl leading-loose text-purple-600">
//             A large paragraph with generous line height, creating an airy and
//             dramatic presentation.
//           </p>

//           {/* Modern mono paragraph */}
//           <p className="font-mono text-sm text-gray-700 bg-gray-100 p-3 rounded">
//             A monospace paragraph with a subtle background, perfect for
//             technical content or code-related text.
//           </p>

//           {/* Gradient text paragraph */}
//           <p className="text-lg font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
//             This paragraph uses a gradient text effect for a modern and
//             eye-catching appearance.
//           </p>

//           {/* Uppercase paragraph */}
//           <p className="uppercase tracking-widest text-sm text-gray-500">
//             An uppercase paragraph with maximum tracking, ideal for headers or
//             emphasis.
//           </p>

//           {/* Drop shadow paragraph */}
//           <p className="text-xl font-bold text-indigo-600 drop-shadow-lg">
//             A paragraph with a subtle drop shadow effect for depth and emphasis.
//           </p>

//           {/* Two-column paragraph */}
//           <p className="columns-2 gap-8 text-gray-600">
//             This is a longer paragraph split into two columns for better
//             readability on wider screens. It contains enough text to demonstrate
//             the column break effectively while maintaining a clean layout.
//           </p>

//           {/* Decorative paragraph */}
//           <p className="text-center text-lg text-red-500 border-t border-b border-red-200 py-4">
//             A decorative paragraph with top and bottom borders for special
//             announcements or featured content.
//           </p>

//           {/* 1. Card component */}
//           <div className="bg-white rounded-lg shadow-md p-6 max-w-sm">
//             <h2 className="text-xl font-bold mb-4">Card Title</h2>
//             <p className="text-gray-600">
//               This is a simple card component with rounded corners and a shadow
//               effect.
//             </p>
//           </div>

//           {/* 2. Alert component */}
//           <div className="bg-yellow-100 border-l-4 border-yellow-500 p-4">
//             <div className="flex">
//               <div className="ml-3">
//                 <p className="text-yellow-700">
//                   Warning alert message goes here.
//                 </p>
//               </div>
//             </div>
//           </div>

//           {/* 3. Badge component */}
//           <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
//             New Feature
//           </span>

//           {/* 4. Button group */}
//           <div className="inline-flex rounded-md shadow-sm">
//             <button className="px-4 py-2 text-sm font-medium text-blue-700 bg-white border border-gray-200 rounded-l-lg hover:bg-gray-100">
//               Left
//             </button>
//             <button className="px-4 py-2 text-sm font-medium text-blue-700 bg-white border-t border-b border-gray-200 hover:bg-gray-100">
//               Middle
//             </button>
//             <button className="px-4 py-2 text-sm font-medium text-blue-700 bg-white border border-gray-200 rounded-r-lg hover:bg-gray-100">
//               Right
//             </button>
//           </div>

//           {/* 5. Input field with label */}
//           <div className="max-w-sm">
//             <label
//               htmlFor="email"
//               className="block text-sm font-medium text-gray-700 mb-1"
//             >
//               Email address
//             </label>
//             <input
//               type="email"
//               id="email"
//               className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
//               placeholder="you@example.com"
//             />
//           </div>

//           {/* 6. Progress bar */}
//           <div className="w-full bg-gray-200 rounded-full h-2.5">
//             <div className="bg-blue-600 h-2.5 rounded-full w-3/4"></div>
//           </div>

//           {/* 7. Navigation tabs */}
//           <nav className="flex space-x-4 border-b border-gray-200">
//             <button className="px-3 py-2 text-sm font-medium text-blue-600 border-b-2 border-blue-600">
//               Active
//             </button>
//             <button className="px-3 py-2 text-sm font-medium text-gray-500 hover:text-gray-700">
//               Tab 2
//             </button>
//             <button className="px-3 py-2 text-sm font-medium text-gray-500 hover:text-gray-700">
//               Tab 3
//             </button>
//           </nav>

//           {/* 2. Search input with icon */}
//           <div className="max-w-md">
//             <div className="relative">
//               <input
//                 type="text"
//                 className="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-blue-500"
//                 placeholder="Search..."
//               />
//               <div className="absolute left-3 top-2.5">
//                 <svg
//                   className="h-5 w-5 text-gray-400"
//                   fill="none"
//                   stroke="currentColor"
//                   viewBox="0 0 24 24"
//                 >
//                   <path
//                     strokeLinecap="round"
//                     strokeLinejoin="round"
//                     strokeWidth="2"
//                     d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
//                   />
//                 </svg>
//               </div>
//             </div>
//           </div>

//           {/* 3. Stats card */}
//           <div className="bg-white rounded-lg shadow-md p-6">
//             <dl className="grid grid-cols-3 gap-4">
//               <div className="text-center">
//                 <dt className="text-sm font-medium text-gray-500">
//                   Total Users
//                 </dt>
//                 <dd className="mt-1 text-3xl font-semibold text-gray-900">
//                   12.5k
//                 </dd>
//               </div>
//               <div className="text-center">
//                 <dt className="text-sm font-medium text-gray-500">Revenue</dt>
//                 <dd className="mt-1 text-3xl font-semibold text-gray-900">
//                   $45.8k
//                 </dd>
//               </div>
//               <div className="text-center">
//                 <dt className="text-sm font-medium text-gray-500">
//                   Conversion
//                 </dt>
//                 <dd className="mt-1 text-3xl font-semibold text-gray-900">
//                   2.4%
//                 </dd>
//               </div>
//             </dl>
//           </div>

//           {/* 4. Toggle switch */}
//           <div className="flex items-center">
//             <button className="relative inline-flex h-6 w-11 flex-shrink-0 rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none bg-gray-200">
//               <span className="translate-x-0 inline-block h-5 w-5 transform rounded-full bg-white shadow transition duration-200 ease-in-out"></span>
//             </button>
//             <span className="ml-3 text-sm font-medium text-gray-900">
//               Notifications
//             </span>
//           </div>

//           {/* 5. Testimonial card */}
//           <div className="bg-white rounded-xl shadow-md p-6 max-w-xl">
//             <div className="flex space-x-4">
//               <div className="h-12 w-12 rounded-full bg-gray-200"></div>
//               <div>
//                 <h4 className="text-lg font-bold">Jane Smith</h4>
//                 <p className="mt-1 text-gray-600">
//                   Amazing product! Exactly what I needed.
//                 </p>
//               </div>
//             </div>
//           </div>

//           {/* 6. File upload */}
//           <div className="max-w-xl">
//             <label className="flex justify-center w-full h-32 px-4 transition bg-white border-2 border-gray-300 border-dashed rounded-md appearance-none hover:border-gray-400 focus:outline-none">
//               <div className="flex items-center space-x-2">
//                 <svg
//                   className="w-6 h-6 text-gray-600"
//                   fill="none"
//                   stroke="currentColor"
//                   viewBox="0 0 24 24"
//                 >
//                   <path
//                     strokeLinecap="round"
//                     strokeLinejoin="round"
//                     strokeWidth="2"
//                     d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"
//                   />
//                 </svg>
//                 <span className="text-gray-600">Drop files to upload</span>
//               </div>
//             </label>
//           </div>

//           {/* 7. Breadcrumb navigation */}
//           <nav className="flex" aria-label="Breadcrumb">
//             <ol className="flex items-center space-x-2">
//               <li>
//                 <div className="flex items-center">
//                   <span className="text-gray-600">Home</span>
//                 </div>
//               </li>
//               <li>
//                 <div className="flex items-center">
//                   <svg
//                     className="h-5 w-5 text-gray-400"
//                     fill="currentColor"
//                     viewBox="0 0 20 20"
//                   >
//                     <path
//                       fillRule="evenodd"
//                       d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
//                       clipRule="evenodd"
//                     />
//                   </svg>
//                   <span className="ml-2 text-gray-600">Products</span>
//                 </div>
//               </li>
//             </ol>
//           </nav>

//           {/* 8. Loading spinner */}
//           <div className="flex justify-center">
//             <div className="animate-spin rounded-full h-8 w-8 border-4 border-blue-500 border-t-transparent"></div>
//           </div>

//           {/* 9. Newsletter subscription */}
//           <div className="bg-gray-100 p-6 rounded-lg max-w-md">
//             <h3 className="text-lg font-medium text-gray-900">
//               Subscribe to our newsletter
//             </h3>
//             <div className="mt-4 flex">
//               <input
//                 type="email"
//                 className="flex-1 rounded-l-lg border-gray-300 focus:ring-blue-500 focus:border-blue-500"
//                 placeholder="Enter your email"
//               />
//               <button className="px-4 py-2 bg-blue-600 text-white rounded-r-lg hover:bg-blue-700">
//                 Subscribe
//               </button>
//             </div>
//           </div>

//           {/* 10. Feature list */}
//           <div className="space-y-4 max-w-lg">
//             <div className="flex items-start">
//               <div className="flex-shrink-0">
//                 <svg
//                   className="h-6 w-6 text-green-500"
//                   fill="none"
//                   stroke="currentColor"
//                   viewBox="0 0 24 24"
//                 >
//                   <path
//                     strokeLinecap="round"
//                     strokeLinejoin="round"
//                     strokeWidth="2"
//                     d="M5 13l4 4L19 7"
//                   />
//                 </svg>
//               </div>
//               <div className="ml-3">
//                 <h3 className="text-lg font-medium text-gray-900">
//                   Easy Integration
//                 </h3>
//                 <p className="mt-1 text-gray-500">
//                   Simple and straightforward implementation process.
//                 </p>
//               </div>
//             </div>
//           </div>

//           {/* 11. Social share buttons */}
//           <div className="flex space-x-4">
//             <button className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
//               <svg
//                 className="h-5 w-5 mr-2"
//                 fill="currentColor"
//                 viewBox="0 0 24 24"
//               >
//                 <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
//               </svg>
//               Share
//             </button>
//           </div>

//           {/* 12. Dropdown menu */}
//           <div className="relative inline-block text-left">
//             <button className="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
//               Options
//               <svg
//                 className="ml-2 h-5 w-5"
//                 fill="none"
//                 stroke="currentColor"
//                 viewBox="0 0 24 24"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M19 9l-7 7-7-7"
//                 />
//               </svg>
//             </button>
//           </div>

//           {/* 13. Comment box */}
//           <div className="bg-white rounded-lg shadow-sm p-6 max-w-2xl">
//             <div className="flex space-x-3">
//               <div className="flex-shrink-0">
//                 <div className="h-10 w-10 rounded-full bg-gray-200"></div>
//               </div>
//               <div className="min-w-0 flex-1">
//                 <textarea
//                   rows="3"
//                   className="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
//                   placeholder="Add your comment..."
//                 ></textarea>
//                 <div className="mt-3 flex items-center justify-end">
//                   <button className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
//                     Comment
//                   </button>
//                 </div>
//               </div>
//             </div>
//           </div>

//           {/* 14. Error message */}
//           <div className="rounded-md bg-red-50 p-4 max-w-lg">
//             <div className="flex">
//               <div className="flex-shrink-0">
//                 <svg
//                   className="h-5 w-5 text-red-400"
//                   fill="none"
//                   stroke="currentColor"
//                   viewBox="0 0 24 24"
//                 >
//                   <path
//                     strokeLinecap="round"
//                     strokeLinejoin="round"
//                     strokeWidth="2"
//                     d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
//                   />
//                 </svg>
//               </div>
//               <div className="ml-3">
//                 <h3 className="text-sm font-medium text-red-800">
//                   Error occurred
//                 </h3>
//                 <p className="mt-2 text-sm text-red-700">
//                   Please try again later.
//                 </p>
//               </div>
//             </div>
//           </div>
//         </div>
//       </div>

//       {/* Actual printed pages */}
//       <div className="print-container">
//         {pages.map((pageContent, pageIndex) => (
//           <React.Fragment key={pageIndex}>
//             <div className="page">
//               <div
//                 className="bg-white shadow-lg"
//                 style={{
//                   width: "210mm",
//                   height: "297mm",
//                   padding: "1in",
//                   boxSizing: "border-box",
//                 }}
//               >
//                 <div className="w-full h-full border border-dashed border-gray-300">
//                   {pageContent.map((element, elementIndex) => (
//                     <div
//                       key={elementIndex}
//                       dangerouslySetInnerHTML={{ __html: element.outerHTML }}
//                     />
//                   ))}
//                 </div>
//               </div>
//             </div>
//             {pageIndex < pages.length - 1 && (
//               <div className="page-break">Page Break</div>
//             )}
//           </React.Fragment>
//         ))}
//       </div>

//       {/* Debug info */}
//       <div className="debug-info fixed bottom-4 right-4 bg-white p-4 rounded shadow">
//         Pages: {pages.length}
//       </div>
//     </div>
//   );
// };